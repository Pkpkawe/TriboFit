# Generated by Django 5.1.5 on 2025-02-21 18:28

import Post.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('User', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coment', models.CharField(max_length=300)),
                ('date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.theuser')),
            ],
        ),
        migrations.CreateModel(
            name='ComentOfComent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('coment_of_coment', models.CharField(max_length=300)),
                ('date', models.DateTimeField(auto_now=True)),
                ('coment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.coment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.theuser')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.theuser')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(blank=True, max_length=600)),
                ('date_create', models.DateTimeField(auto_now_add=True)),
                ('post', models.FileField(upload_to=Post.models.Post_Directory_Path)),
                ('coments', models.ManyToManyField(blank=True, related_name='Coments', through='Post.Coment', to='User.theuser')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Posts', to='User.theuser')),
                ('likes', models.ManyToManyField(blank=True, related_name='Likes', through='Post.Like', to='User.theuser')),
            ],
        ),
        migrations.AddField(
            model_name='like',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.post'),
        ),
        migrations.AddField(
            model_name='coment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.post'),
        ),
        migrations.CreateModel(
            name='Save',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Post.post')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='User.theuser')),
            ],
            options={
                'unique_together': {('user', 'post')},
            },
        ),
        migrations.AddField(
            model_name='post',
            name='saves',
            field=models.ManyToManyField(blank=True, related_name='Saves', through='Post.Save', to='User.theuser'),
        ),
        migrations.AddField(
            model_name='post',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='Tags', to='Post.tag'),
        ),
        migrations.AlterUniqueTogether(
            name='like',
            unique_together={('user', 'post')},
        ),
    ]
